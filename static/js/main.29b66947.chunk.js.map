{"version":3,"sources":["redux/contacts-actions.js","redux/contacts-reducer.js","redux/store.js","components/Layout/Layout.js","components/ContactsEditor/ContactsEditor.js","components/ContactsList/ContactsList.js","components/Filter.js","components/App.js","index.js"],"names":["addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","contacts","createReducer","actions","state","some","contact","alert","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","persistor","persistStore","Layout","children","className","ContactsEditor","text","tel","handleChange","e","setState","target","value","handleTelChange","handleSubmit","preventDefault","props","onSubmit","this","type","onChange","Component","connect","dispatch","contactsActions","filterContacts","toLowerCase","includes","onRemove","map","onClick","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.29b66947.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add', (name, number) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\nconst deleteContact = createAction('contacts/delete');\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions';\r\n\r\nconst defaultState = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst contacts = createReducer([...defaultState], {\r\n  [actions.addContact]: (state, { payload }) => {\r\n    const isValidate = state.some(contact => contact.name === payload.name);\r\n    if (!isValidate) {\r\n      return [...state, payload];\r\n    }\r\n    alert(`${payload.name} is already in contacts`);\r\n    return state;\r\n  },\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from './contacts-reducer';\r\nimport {\r\n  persistReducer,\r\n  persistStore,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\nconst store = configureStore({\r\n  reducer: {\r\n    state: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n});\r\n\r\nconst persistor = persistStore(store);\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport './Layout.css';\r\n\r\nconst Layout = ({ children }) => <div className=\"Layout\">{children}</div>;\r\n\r\nexport default Layout;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts-actions';\r\nimport './ContactsEditor.css';\r\n\r\nclass ContactsEditor extends Component {\r\n  state = {\r\n    text: '',\r\n    tel: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      text: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleTelChange = e => {\r\n    this.setState({\r\n      tel: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.text, this.state.tel);\r\n\r\n    this.setState({ text: '', tel: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"TaskEditor\" onSubmit={this.handleSubmit}>\r\n        <label className=\"TaskEditor-label\">\r\n          Name\r\n          <input\r\n            className=\"TaskEditor-input\"\r\n            type=\"text\"\r\n            value={this.state.text}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className=\"TaskEditor-label\">\r\n          Tel\r\n          <input\r\n            className=\"TaskEditor-input\"\r\n            type=\"tel\"\r\n            value={this.state.tel}\r\n            onChange={this.handleTelChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className=\"TaskEditor-button\">\r\n          Добавить контакт\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) =>\r\n    dispatch(contactsActions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactsEditor);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts-actions';\r\nimport './ContactsList.css';\r\n\r\nconst TaskList = ({ contacts, onRemove }) => (\r\n  <ul className=\"TaskList\">\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id}>\r\n        {name}: {number}\r\n        <button type=\"button\" onClick={() => onRemove(id)}>\r\n          Удалить\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nconst filterContacts = (contacts, filter) => {\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n};\r\nconst mapStateToProps = ({ state: { contacts, filter } }) => ({\r\n  contacts: filterContacts(contacts, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onRemove: id => dispatch(contactsActions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../redux/contacts-actions';\r\n\r\nconst Filter = ({ value, changeFilter }) => (\r\n  <label>\r\n    Find contacts by name\r\n    <br />\r\n    <input type=\"text\" value={value} onChange={changeFilter} />\r\n  </label>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.filter,\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeFilter: e => dispatch(contactsActions.changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\nimport Layout from './Layout/Layout';\nimport ContactsEditor from './ContactsEditor';\nimport ContactsList from './ContactsList';\nimport Filter from './Filter';\n\nconst App = () => {\n  return (\n    <Layout>\n      <h1>Phonebook</h1>\n      <ContactsEditor />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </Layout>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}